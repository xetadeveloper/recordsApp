package frontend;

import backend.MainClient;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.JDialog;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import pojo.*;

/**
 *
 * @author Fego
 */
public class StaffFrame extends AbstractClientFrame {

    private MainClient client;
    private ArrayList<ArrayList<Object>> studentData;
    private String searchText = "";
    private String searchType;

    private String role;
    private int matricNo;

    private boolean dummy = false;

    /**
     * Creates new form CourseAdvisorFrame
     */
    public StaffFrame() {
        initComponents();
        setDummy(false);

        //for the table style and column header
        setDefaultTableStyle(tblStudents);
        initTableDummy(tblStudents);
    }

    public StaffFrame(MainClient client, ArrayList<ArrayList<Object>> studentData) {
        this();
        this.client = client;
        this.studentData = studentData;
        initData(studentData);
        initTableRecords(tblStudents, studentList, columnNames);
        setDummy(false);
        role = client.getRole();

        for (String col : columnNames) {
            cmbSearch.addItem(col);
        }
        initDocumentListener(txtSearch);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelStudent = new javax.swing.JPanel();
        this.setSize(screenSize);
        tabStudent = new javax.swing.JTabbedPane();
        panelInfo = new javax.swing.JPanel();
        lblPassport = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lblReportHeader1 = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        lblDept = new javax.swing.JLabel();
        lblCollege = new javax.swing.JLabel();
        lblProgramme = new javax.swing.JLabel();
        lblLevel = new javax.swing.JLabel();
        lblMatricNo = new javax.swing.JLabel();
        lblCAApproved = new javax.swing.JLabel();
        lblHODApproved = new javax.swing.JLabel();
        lblDeanApproved = new javax.swing.JLabel();
        lblRegStatus = new javax.swing.JLabel();
        lblAdmin = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        lblStuReg = new javax.swing.JLabel();
        panelFinance = new javax.swing.JPanel();
        lblReportHeader3 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        lblOriginalFees = new javax.swing.JLabel();
        lblPaidFees = new javax.swing.JLabel();
        lblBalanceFees = new javax.swing.JLabel();
        lblOriginalFees1 = new javax.swing.JLabel();
        lblOriginalFees2 = new javax.swing.JLabel();
        lblOriginalFees3 = new javax.swing.JLabel();
        panelReport = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        lblReportHeader = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        separator = new javax.swing.JSeparator();
        lblGpa = new javax.swing.JLabel();
        lblMaxUnits = new javax.swing.JLabel();
        lblRegisteredUnits = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRegistered = new javax.swing.JTable();
        setDefaultTableStyle(tblRegistered);
        tblRegistered.setFillsViewportHeight(true);
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCarried = new javax.swing.JTable();
        setDefaultTableStyle(tblCarried);
        tblCarried.setFillsViewportHeight(true);
        popStudentOptions = new javax.swing.JPopupMenu();
        itemView = new javax.swing.JMenuItem();
        itemApprove = new javax.swing.JMenuItem();
        panelCourseDetails = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        lblCourseName = new javax.swing.JLabel();
        lblCourseCode = new javax.swing.JLabel();
        lblCourseStatus = new javax.swing.JLabel();
        lblCreditUnits = new javax.swing.JLabel();
        lblCourseLevel = new javax.swing.JLabel();
        lblCourseProgramme = new javax.swing.JLabel();
        lblReportHeader6 = new javax.swing.JLabel();
        panelMain = new javax.swing.JPanel();
        paneStudents = new javax.swing.JScrollPane();
        tblStudents = new javax.swing.JTable();
        setDefaultTableStyle(tblStudents);
        tblStudents.setFillsViewportHeight(true);
        lblReportHeader5 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        cmbSearch = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuChangePassword = new javax.swing.JMenuItem();

        panelStudent.setPreferredSize(new java.awt.Dimension(1017, 650));

        tabStudent.setBackground(new java.awt.Color(84, 83, 83));
        tabStudent.setForeground(new java.awt.Color(204, 204, 204));
        tabStudent.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        tabStudent.setAutoscrolls(true);
        tabStudent.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tabStudent.setFont(new java.awt.Font("Segoe UI Semilight", 0, 12)); // NOI18N

        panelInfo.setBackground(new java.awt.Color(84, 83, 83));

        lblPassport.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblPassport.setOpaque(true);
        lblPassport.setPreferredSize(new java.awt.Dimension(147, 140));

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("FIRST NAME");

        jLabel3.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("LEVEL");

        jLabel4.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setText("COLLEGE");

        jLabel5.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 204, 204));
        jLabel5.setText("MATRIC NO");

        jLabel6.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 204, 204));
        jLabel6.setText("DEPARTMENT");

        jLabel7.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 204, 204));
        jLabel7.setText("PROGRAMME");

        jLabel13.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 204, 204));
        jLabel13.setText("LAST NAME");

        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("COURSE ADVISOR");

        jLabel14.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(204, 204, 204));
        jLabel14.setText("REGISTRATION STATUS");

        jLabel15.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(204, 204, 204));
        jLabel15.setText("HEAD OF DEPARTMENT");

        jLabel16.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(204, 204, 204));
        jLabel16.setText("COLLEGE DEAN");

        lblReportHeader1.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        lblReportHeader1.setForeground(new java.awt.Color(204, 204, 204));
        lblReportHeader1.setText("STUDENT INFORMATION");

        lblLastName.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblLastName.setForeground(new java.awt.Color(204, 204, 204));
        lblLastName.setText("N/A");

        lblFirstName.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblFirstName.setForeground(new java.awt.Color(204, 204, 204));
        lblFirstName.setText("N/A");

        lblDept.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblDept.setForeground(new java.awt.Color(204, 204, 204));
        lblDept.setText("N/A");

        lblCollege.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblCollege.setForeground(new java.awt.Color(204, 204, 204));
        lblCollege.setText("N/A");

        lblProgramme.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblProgramme.setForeground(new java.awt.Color(204, 204, 204));
        lblProgramme.setText("N/A");

        lblLevel.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblLevel.setForeground(new java.awt.Color(204, 204, 204));
        lblLevel.setText("N/A");

        lblMatricNo.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblMatricNo.setForeground(new java.awt.Color(204, 204, 204));
        lblMatricNo.setText("N/A");

        lblCAApproved.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblCAApproved.setForeground(new java.awt.Color(204, 204, 204));
        lblCAApproved.setText("N/A");

        lblHODApproved.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblHODApproved.setForeground(new java.awt.Color(204, 204, 204));
        lblHODApproved.setText("N/A");

        lblDeanApproved.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblDeanApproved.setForeground(new java.awt.Color(204, 204, 204));
        lblDeanApproved.setText("N/A");

        lblRegStatus.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblRegStatus.setForeground(new java.awt.Color(204, 204, 204));
        lblRegStatus.setText("N/A");

        lblAdmin.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblAdmin.setForeground(new java.awt.Color(204, 204, 204));
        lblAdmin.setText("N/A");

        jLabel24.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(204, 204, 204));
        jLabel24.setText("ADMIN");

        jLabel33.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(204, 204, 204));
        jLabel33.setText("STUDENT REGISTERED");

        lblStuReg.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblStuReg.setForeground(new java.awt.Color(204, 204, 204));
        lblStuReg.setText("N/A");

        javax.swing.GroupLayout panelInfoLayout = new javax.swing.GroupLayout(panelInfo);
        panelInfo.setLayout(panelInfoLayout);
        panelInfoLayout.setHorizontalGroup(
            panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInfoLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInfoLayout.createSequentialGroup()
                        .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelInfoLayout.createSequentialGroup()
                                .addComponent(lblPassport, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMatricNo, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)))
                            .addGroup(panelInfoLayout.createSequentialGroup()
                                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel13))
                                .addGap(27, 27, 27)
                                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblLastName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblDept, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                                    .addComponent(lblCollege, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblProgramme, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblLevel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel2)
                            .addComponent(jLabel15)
                            .addComponent(jLabel24)
                            .addComponent(jLabel14)
                            .addComponent(jLabel33))
                        .addGap(18, 18, 18)
                        .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHODApproved, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCAApproved, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDeanApproved, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                            .addComponent(lblRegStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                            .addComponent(lblStuReg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(158, 158, 158))
                    .addGroup(panelInfoLayout.createSequentialGroup()
                        .addComponent(lblReportHeader1)
                        .addGap(130, 130, 130))))
        );
        panelInfoLayout.setVerticalGroup(
            panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInfoLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(lblReportHeader1)
                .addGap(18, 18, 18)
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelInfoLayout.createSequentialGroup()
                        .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelInfoLayout.createSequentialGroup()
                                .addComponent(lblPassport, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(lblFirstName)))
                            .addGroup(panelInfoLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblAdmin)
                                    .addComponent(jLabel24))
                                .addGap(18, 18, 18)
                                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(lblCAApproved))
                                .addGap(18, 18, 18)
                                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel15)
                                    .addComponent(lblHODApproved))
                                .addGap(18, 18, 18)
                                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16)
                                    .addComponent(lblDeanApproved)))
                            .addGroup(panelInfoLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(lblMatricNo)))
                        .addGap(18, 18, 18)
                        .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblLastName)
                                .addComponent(jLabel13))
                            .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblStuReg)
                                .addComponent(jLabel33))))
                    .addComponent(lblRegStatus))
                .addGap(18, 18, 18)
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblCollege))
                .addGap(18, 18, 18)
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lblDept))
                .addGap(18, 18, 18)
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lblProgramme))
                .addGap(18, 18, 18)
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblLevel))
                .addContainerGap(143, Short.MAX_VALUE))
        );

        tabStudent.addTab("Student Details", panelInfo);

        panelFinance.setBackground(new java.awt.Color(84, 83, 83));

        lblReportHeader3.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        lblReportHeader3.setForeground(new java.awt.Color(204, 204, 204));
        lblReportHeader3.setText("FINANCIAL REPORT");

        jLabel25.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(204, 204, 204));
        jLabel25.setText("ORIGINAL SCHOOL FEES");

        jLabel27.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(204, 204, 204));
        jLabel27.setText("PAID FEES");

        jLabel28.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(204, 204, 204));
        jLabel28.setText("BALANCE FEES");

        lblOriginalFees.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblOriginalFees.setForeground(new java.awt.Color(204, 204, 204));
        lblOriginalFees.setText("N/A");

        lblPaidFees.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblPaidFees.setForeground(new java.awt.Color(204, 204, 204));
        lblPaidFees.setText("N/A");

        lblBalanceFees.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblBalanceFees.setForeground(new java.awt.Color(204, 204, 204));
        lblBalanceFees.setText("N/A");

        lblOriginalFees1.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblOriginalFees1.setForeground(new java.awt.Color(204, 204, 204));
        lblOriginalFees1.setText("N");

        lblOriginalFees2.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblOriginalFees2.setForeground(new java.awt.Color(204, 204, 204));
        lblOriginalFees2.setText("N");

        lblOriginalFees3.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblOriginalFees3.setForeground(new java.awt.Color(204, 204, 204));
        lblOriginalFees3.setText("N");

        javax.swing.GroupLayout panelFinanceLayout = new javax.swing.GroupLayout(panelFinance);
        panelFinance.setLayout(panelFinanceLayout);
        panelFinanceLayout.setHorizontalGroup(
            panelFinanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFinanceLayout.createSequentialGroup()
                .addGroup(panelFinanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFinanceLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(lblReportHeader3))
                    .addGroup(panelFinanceLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(panelFinanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel27)
                            .addComponent(jLabel25)
                            .addComponent(jLabel28))
                        .addGap(48, 48, 48)
                        .addGroup(panelFinanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblOriginalFees1)
                            .addComponent(lblOriginalFees2)
                            .addComponent(lblOriginalFees3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelFinanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBalanceFees, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPaidFees, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblOriginalFees, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(441, 441, 441))
        );
        panelFinanceLayout.setVerticalGroup(
            panelFinanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFinanceLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(lblReportHeader3)
                .addGap(35, 35, 35)
                .addGroup(panelFinanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(lblOriginalFees)
                    .addComponent(lblOriginalFees1))
                .addGap(37, 37, 37)
                .addGroup(panelFinanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(lblPaidFees)
                    .addComponent(lblOriginalFees2))
                .addGap(37, 37, 37)
                .addGroup(panelFinanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(lblBalanceFees)
                    .addComponent(lblOriginalFees3))
                .addGap(328, 328, 328))
        );

        tabStudent.addTab("Financial Report", panelFinance);

        panelReport.setBackground(new java.awt.Color(84, 83, 83));

        jLabel8.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 204, 204));
        jLabel8.setText("GRADE POINT AVERAGE");

        lblReportHeader.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        lblReportHeader.setForeground(new java.awt.Color(204, 204, 204));
        lblReportHeader.setText("ACADEMIC REPORT");

        jLabel9.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(204, 204, 204));
        jLabel9.setText("TOTAL UNITS REGISTERED");

        jLabel10.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 204, 204));
        jLabel10.setText("COURSES REGISTERED");

        jLabel11.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(204, 204, 204));
        jLabel11.setText("MAX UNITS ALLOWED");

        separator.setBackground(new java.awt.Color(153, 153, 153));
        separator.setOrientation(javax.swing.SwingConstants.VERTICAL);
        separator.setOpaque(true);

        lblGpa.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblGpa.setForeground(new java.awt.Color(204, 204, 204));
        lblGpa.setText("N/A");

        lblMaxUnits.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblMaxUnits.setForeground(new java.awt.Color(204, 204, 204));
        lblMaxUnits.setText("N/A");

        lblRegisteredUnits.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblRegisteredUnits.setForeground(new java.awt.Color(204, 204, 204));
        lblRegisteredUnits.setText("N/A");

        jLabel12.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(204, 204, 204));
        jLabel12.setText("COURSES CARRIED OVER");

        tblRegistered.setAutoCreateRowSorter(true);
        tblRegistered.setBackground(new java.awt.Color(84, 83, 83));
        tblRegistered.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tblRegistered.setFont(new java.awt.Font("Segoe UI Emoji", 0, 14)); // NOI18N
        tblRegistered.setForeground(new java.awt.Color(204, 204, 204));
        tblRegistered.setToolTipText("Courses Registered");
        tblRegistered.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblRegistered.setRowHeight(20);
        tblRegistered.setRowMargin(3);
        tblRegistered.setSelectionForeground(new java.awt.Color(51, 51, 51));
        tblRegistered.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblRegistered.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblRegisteredFocusGained(evt);
            }
        });
        tblRegistered.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRegisteredMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblRegistered);

        tblCarried.setAutoCreateRowSorter(true);
        tblCarried.setBackground(new java.awt.Color(84, 83, 83));
        tblCarried.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tblCarried.setFont(new java.awt.Font("Segoe UI Emoji", 0, 14)); // NOI18N
        tblCarried.setForeground(new java.awt.Color(204, 204, 204));
        tblCarried.setToolTipText("Courses Selected For Registration");
        tblCarried.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblCarried.setRowHeight(20);
        tblCarried.setRowMargin(3);
        tblCarried.setSelectionForeground(new java.awt.Color(51, 51, 51));
        tblCarried.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblCarried.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblCarriedFocusGained(evt);
            }
        });
        tblCarried.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCarriedMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCarried);

        javax.swing.GroupLayout panelReportLayout = new javax.swing.GroupLayout(panelReport);
        panelReport.setLayout(panelReportLayout);
        panelReportLayout.setHorizontalGroup(
            panelReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelReportLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(panelReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelReportLayout.createSequentialGroup()
                        .addGroup(panelReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(38, 38, 38)
                        .addGroup(panelReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblMaxUnits, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblGpa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblRegisteredUnits, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                        .addGap(91, 91, 91)
                        .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(panelReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelReportLayout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jLabel10))
                            .addGroup(panelReportLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(39, 39, 39)
                        .addGroup(panelReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblReportHeader))
                .addGap(31, 31, 31))
        );
        panelReportLayout.setVerticalGroup(
            panelReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelReportLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblReportHeader)
                .addGroup(panelReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelReportLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(panelReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(lblGpa))
                        .addGap(49, 49, 49)
                        .addGroup(panelReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(lblMaxUnits))
                        .addGap(49, 49, 49)
                        .addGroup(panelReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(lblRegisteredUnits))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelReportLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(panelReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12))
                        .addGap(33, 33, 33)
                        .addGroup(panelReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(90, 90, 90))))
            .addGroup(panelReportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(separator))
        );

        tabStudent.addTab("Academic Report", panelReport);

        javax.swing.GroupLayout panelStudentLayout = new javax.swing.GroupLayout(panelStudent);
        panelStudent.setLayout(panelStudentLayout);
        panelStudentLayout.setHorizontalGroup(
            panelStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabStudent)
        );
        panelStudentLayout.setVerticalGroup(
            panelStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStudentLayout.createSequentialGroup()
                .addComponent(tabStudent)
                .addContainerGap())
        );

        popStudentOptions.setRequestFocusEnabled(false);
        popStudentOptions.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                popStudentOptionsFocusLost(evt);
            }
        });

        itemView.setText("View Student Detail");
        itemView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemViewActionPerformed(evt);
            }
        });
        popStudentOptions.add(itemView);

        itemApprove.setText("Approve Student Registration");
        itemApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemApproveActionPerformed(evt);
            }
        });
        popStudentOptions.add(itemApprove);

        panelCourseDetails.setBackground(new java.awt.Color(84, 83, 83));

        jLabel17.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(204, 204, 204));
        jLabel17.setText("COURSE CODE");

        jLabel18.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(204, 204, 204));
        jLabel18.setText("CREDIT UNITS");

        jLabel19.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(204, 204, 204));
        jLabel19.setText("COURSE NAME");

        jLabel20.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(204, 204, 204));
        jLabel20.setText("LEVEL");

        jLabel21.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(204, 204, 204));
        jLabel21.setText("COURSE STATUS");

        jLabel22.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(204, 204, 204));
        jLabel22.setText("PROGRAMME");

        lblCourseName.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblCourseName.setForeground(new java.awt.Color(204, 204, 204));
        lblCourseName.setText("N/A");

        lblCourseCode.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblCourseCode.setForeground(new java.awt.Color(204, 204, 204));
        lblCourseCode.setText("N/A");

        lblCourseStatus.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblCourseStatus.setForeground(new java.awt.Color(204, 204, 204));
        lblCourseStatus.setText("N/A");

        lblCreditUnits.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblCreditUnits.setForeground(new java.awt.Color(204, 204, 204));
        lblCreditUnits.setText("N/A");

        lblCourseLevel.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblCourseLevel.setForeground(new java.awt.Color(204, 204, 204));
        lblCourseLevel.setText("N/A");

        lblCourseProgramme.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        lblCourseProgramme.setForeground(new java.awt.Color(204, 204, 204));
        lblCourseProgramme.setText("N/A");

        lblReportHeader6.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        lblReportHeader6.setForeground(new java.awt.Color(204, 204, 204));
        lblReportHeader6.setText("COURSE INFO");

        javax.swing.GroupLayout panelCourseDetailsLayout = new javax.swing.GroupLayout(panelCourseDetails);
        panelCourseDetails.setLayout(panelCourseDetailsLayout);
        panelCourseDetailsLayout.setHorizontalGroup(
            panelCourseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCourseDetailsLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panelCourseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCourseDetailsLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(panelCourseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelCourseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel17)
                                .addComponent(jLabel18)
                                .addComponent(jLabel19))
                            .addGroup(panelCourseDetailsLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(lblReportHeader6))))
                    .addGroup(panelCourseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel20)
                        .addComponent(jLabel21)
                        .addComponent(jLabel22)))
                .addGap(18, 18, 18)
                .addGroup(panelCourseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblCourseName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCourseCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCreditUnits, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCourseStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCourseProgramme, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCourseLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelCourseDetailsLayout.setVerticalGroup(
            panelCourseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCourseDetailsLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lblReportHeader6)
                .addGap(18, 18, 18)
                .addGroup(panelCourseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(lblCourseCode))
                .addGap(18, 18, 18)
                .addGroup(panelCourseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(lblCourseName))
                .addGap(18, 18, 18)
                .addGroup(panelCourseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCourseDetailsLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel21))
                    .addGroup(panelCourseDetailsLayout.createSequentialGroup()
                        .addComponent(lblCreditUnits)
                        .addGap(18, 18, 18)
                        .addComponent(lblCourseStatus)))
                .addGap(22, 22, 22)
                .addGroup(panelCourseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCourseDetailsLayout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel20))
                    .addGroup(panelCourseDetailsLayout.createSequentialGroup()
                        .addComponent(lblCourseProgramme)
                        .addGap(18, 18, 18)
                        .addComponent(lblCourseLevel)))
                .addGap(47, 47, 47))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Course Advisor Manager");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        panelMain.setBackground(new java.awt.Color(84, 83, 83));
        panelMain.setAutoscrolls(true);

        tblStudents.setAutoCreateRowSorter(true);
        tblStudents.setBackground(new java.awt.Color(84, 83, 83));
        tblStudents.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tblStudents.setFont(new java.awt.Font("Segoe UI Emoji", 0, 14)); // NOI18N
        tblStudents.setForeground(new java.awt.Color(204, 204, 204));
        tblStudents.setToolTipText("List of students");
        tblStudents.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblStudents.setRowHeight(20);
        tblStudents.setRowMargin(3);
        tblStudents.setSelectionForeground(new java.awt.Color(51, 51, 51));
        tblStudents.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblStudents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStudentsMouseClicked(evt);
            }
        });
        paneStudents.setViewportView(tblStudents);

        lblReportHeader5.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        lblReportHeader5.setForeground(new java.awt.Color(204, 204, 204));
        lblReportHeader5.setText("STUDENTS LIST");

        txtSearch.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N

        jLabel23.setFont(new java.awt.Font("Segoe UI Light", 1, 16)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(204, 204, 204));
        jLabel23.setText("SEARCH");

        cmbSearch.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        cmbSearch.setName("CollegeCombo"); // NOI18N
        cmbSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMainLayout = new javax.swing.GroupLayout(panelMain);
        panelMain.setLayout(panelMainLayout);
        panelMainLayout.setHorizontalGroup(
            panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(paneStudents, javax.swing.GroupLayout.DEFAULT_SIZE, 818, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMainLayout.createSequentialGroup()
                        .addComponent(lblReportHeader5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbSearch, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE))))
                .addContainerGap())
        );
        panelMainLayout.setVerticalGroup(
            panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMainLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSearch)
                        .addComponent(jLabel23))
                    .addComponent(lblReportHeader5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(paneStudents, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenu1.setText("File");

        menuChangePassword.setText("Change Password");
        menuChangePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuChangePasswordActionPerformed(evt);
            }
        });
        jMenu1.add(menuChangePassword);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tblStudentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStudentsMouseClicked

        if (evt.getClickCount() == 2) {
            Point location = evt.getLocationOnScreen();

            int row = tblStudents.getSelectedRow();
            DefaultTableModel model = (DefaultTableModel) tblStudents.getModel();
            matricNo = Integer.parseInt(String.valueOf(model.getValueAt(row, 0)));
            student = studentList.stream().
                    filter(student -> student.getMatricNo() == matricNo).
                    findFirst().
                    orElse(null);
            System.out.println("Matric No: " + matricNo);
            popStudentOptions.setLocation(location.x, location.y);
            popStudentOptions.setVisible(true);
        } else {
            popStudentOptions.setVisible(false);
        }
    }//GEN-LAST:event_tblStudentsMouseClicked

    private void popStudentOptionsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_popStudentOptionsFocusLost
        popStudentOptions.setVisible(false);

    }//GEN-LAST:event_popStudentOptionsFocusLost

    private void itemViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemViewActionPerformed
        popStudentOptions.setVisible(false);
        initStudentFullDataPanel(matricNo); //initialize fields in the dialog

        JDialog dialogStudent = createDialog(panelStudent, panelStudent.getPreferredSize());
        dialogStudent.setAlwaysOnTop(false);
        dialogStudent.addWindowListener(new WindowAdapter() {
            @Override
            public void windowOpened(WindowEvent e) {
                popStudentOptions.setVisible(false);
            }

            @Override
            public void windowClosing(WindowEvent e) {
                if (confirmAction("Close full details panel?")) {
                    dialogStudent.dispose();
                }
            }
        });
        dialogStudent.setVisible(true); //Show the dialog
    }//GEN-LAST:event_itemViewActionPerformed

    private void itemApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemApproveActionPerformed
        popStudentOptions.setVisible(false);
        boolean readyApprove = false;
        if (confirmAction("Do you want to approve this student's registration status")) {
            if (matricNo != 0) {
                System.out.println("ROle: " + client.getRole());
                String columnName = null;
                switch (client.getRole().toLowerCase()) {
                    case "course advisor":
                        if (checkForLowerApproval(matricNo)) {
                            columnName = "CourseAdvisorApproved";
                            readyApprove = true;
                        } else {
                            readyApprove = false;
                        }
                        break;
                    case "hod":
                        if (checkForLowerApproval(matricNo)) {
                            columnName = "HODApproved";
                            readyApprove = true;
                        } else {
                            readyApprove = false;
                        }

                        break;
                    case "dean":
                        if (checkForLowerApproval(matricNo)) {
                            columnName = "DeanApproved";
                            readyApprove = true;
                        } else {
                            readyApprove = false;
                        }

                        break;
                }

                if (readyApprove) {
                    String queryApprove = String.format("Update students set %s = true where MatricNo = %d", columnName, matricNo);
                    client.sendQuery(UPDATE + ":" + queryApprove);
                    Boolean updated = (Boolean) client.getResponse();
                    if (updated) {
                        displayMessage("Student with Matric No: " + matricNo + " has been approved to continue with registration", "Student Approval Succeeded");
                    } else {
                        displayMessage("Student approval failed. Please contact admin", "Error");
                    }
                } else {
                    switch (client.getRole().toLowerCase()) {
                        case "course advisor":
                            displayErrorMessage("Student with Matric No: " + matricNo + " has not been approved by admin for registration.", "Student Registration Process Failed");
                            break;
                        case "hod":
                            displayErrorMessage("Course Advisor of student with matric no: " + matricNo + " has not approvedhis/her registration", "Student Registration Process Failed");
                            break;
                        case "dean":
                            displayErrorMessage("HOD of student with matric no: " + matricNo + " has not approved his/her registration", "Student Registration Process Failed");
                            break;
                    }
                }
            } else {
                throw new IllegalArgumentException("Matric no is not set");
            }
        }
    }//GEN-LAST:event_itemApproveActionPerformed

    private void tblCarriedFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblCarriedFocusGained
        loseFocus(tblRegistered);
    }//GEN-LAST:event_tblCarriedFocusGained

    private void tblCarriedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCarriedMouseClicked
        showCourseInfo(evt, coursesFull);
    }//GEN-LAST:event_tblCarriedMouseClicked

    private void tblRegisteredFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblRegisteredFocusGained
        loseFocus(tblCarried);
    }//GEN-LAST:event_tblRegisteredFocusGained

    private void tblRegisteredMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRegisteredMouseClicked
        showCourseInfo(evt, coursesFull);
    }//GEN-LAST:event_tblRegisteredMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (confirmAction("Do you want to end this session?")) {
            if (dummy) {
                this.dispose();
            } else {
                boolean sent = client.sendQuery(EXIT + ":exit");

                //When staff exits, the login frame becomes visible again
                if (sent) {
                    new ClientLoginFrame().setVisible(true);
                } else {
                    displayErrorMessage("Server may be offline. Contact Server Admin", "Error writing to server");
                }

                this.dispose();
            }
        }
    }//GEN-LAST:event_formWindowClosing

    private void menuChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuChangePasswordActionPerformed
        changeStaffLogin(client);
    }//GEN-LAST:event_menuChangePasswordActionPerformed

    private void cmbSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSearchActionPerformed
        searchType = cmbSearch.getSelectedItem().toString().trim();
    }//GEN-LAST:event_cmbSearchActionPerformed

    /**
     * If the approval is coming from a higher end in terms of staff roles,
     * first check that the lower end staff role has approved before approving
     *
     * @param matricNo the matric no of the student
     * @return true/false of approved
     */
    private boolean checkForLowerApproval(int matricNo) {
        for (Student studentLocal : studentList) {
            if (studentLocal.getMatricNo() == matricNo) {
                System.out.println("Student has been found");
                switch (client.getRole().toLowerCase()) {
                    case "course advisor":
                        return studentLocal.isRegistrationAllowed();
                    case "hod":
                        return studentLocal.isCourseAdvisorApproved();
                    case "dean":
                        return studentLocal.isHODApproved();
                }
            }
        }
        return false;
    }

    //Custom Methods
    /**
     * Initializes the student full info panel
     */
    private void initStudentFullDataPanel(int matricNo) {
        //Student Details Classes
        Student studentLocal = null;
        College collegeLocal = null;
        Department deptLocal = null;
        Programme programmeLocal = null;
        SessionDetails sessionLocal = null;
        CarryOvers carryOverLocal = new CarryOvers();
        RegisteredCourses regCoursesLocal = new RegisteredCourses();
        Course coursesLocal = new Course();

        //init variables first
        for (ArrayList<Object> recordList : studentData) {
            //Students
            if (recordList.size() > 0) {
                if (recordList.get(0) instanceof Student) {
                    for (Object stu : recordList) {
                        if (((Student) stu).getMatricNo() == matricNo) {
                            studentLocal = (Student) stu;
                        }
                    }
                }//College
                else if (recordList.get(0) instanceof College) {
                    for (Object stu : recordList) {
                        if (((College) stu).getCollegeMatricNo() == matricNo) {
                            collegeLocal = (College) stu;
                        }
                    }
                }//Dept
                else if (recordList.get(0) instanceof Department) {
                    for (Object stu : recordList) {
                        if (((Department) stu).getDeptMatricNo() == matricNo) {
                            deptLocal = (Department) stu;
                        }
                    }
                }//Programme
                else if (recordList.get(0) instanceof Programme) {
                    for (Object stu : recordList) {
                        if (((Programme) stu).getProgrammeMatricNo() == matricNo) {
                            programmeLocal = (Programme) stu;
                        }
                    }
                }//Session
                else if (recordList.get(0) instanceof SessionDetails) {
                    for (Object stu : recordList) {
                        if (((SessionDetails) stu).getSessionMatricNo() == matricNo) {
                            sessionLocal = (SessionDetails) stu;
                        }
                    }
                }//Carry Over
                else if (recordList.get(0) instanceof CarryOvers) {
                    for (Object stu : recordList) {
                        if (((CarryOvers) stu).getCarryMatricNo() == matricNo) {
                            CarryOvers carryOverLocalTemp = (CarryOvers) stu;
                            carryOverLocal.addCarried(carryOverLocalTemp.getCarryOverCourse());
                        }
                    }
                }//Registered Courses
                else if (recordList.get(0) instanceof RegisteredCourses) {
                    for (Object stu : recordList) {
                        if (((RegisteredCourses) stu).getRegMatricNo() == matricNo) {
                            RegisteredCourses regCoursesLocalTemp = (RegisteredCourses) stu;
                            regCoursesLocal.addRegisteredCourse(regCoursesLocalTemp.getRegCourse());
                        }
                    }
                }//newCourses
                else if (recordList.get(0) instanceof Course) {
                    for (Object stu : recordList) {
                        if (((Course) stu).getCourseMatricNo() == matricNo) {
                            Course coursesLocalTemp = (Course) stu;
                            coursesLocal.addCourseFullInfo(coursesLocalTemp);
                        }
                    }
                }
            }
        }

        initStudentDetailsPanel(studentLocal, collegeLocal, programmeLocal, deptLocal);

        initAcademicReportPanel(studentLocal, sessionLocal, carryOverLocal, regCoursesLocal);

        initFinancialReportPanel(studentLocal, programmeLocal);

        initSchoolInfo(client);
    }

    /**
     * Initializing the various panels with data gotten from server
     */
    private void initStudentDetailsPanel(Student student, College college, Programme prog, Department dept) {
        String approved = "Approved", unapproved = "Not Approved", notStarted = "Not Started", started = "Started", finished = "Finished", pending = "Pending",
                awaiting = "Awaiting Approval", yes = "Yes", no = "No";

        lblMatricNo.setText(checkNull(student.getMatricNo()));
        lblFirstName.setText(checkNull(student.getFirstName()));
        lblLastName.setText(checkNull(student.getLastName()));
        lblCollege.setText(checkNull(college.getCollegeName()));
        lblDept.setText(checkNull(dept.getDeptName()));
        lblProgramme.setText(checkNull(prog.getProgrammeName()));
        lblLevel.setText(checkNull(student.getLevel()));
        lblCAApproved.setText(checkNull(student.isCourseAdvisorApproved() ? approved : unapproved));
        lblHODApproved.setText(checkNull(student.isHODApproved() ? approved : unapproved));
        lblDeanApproved.setText(checkNull(student.isDeanApproved() ? approved : unapproved));
        lblRegStatus.setText(student.isRegistrationAllowed() ? (student.isCourseAdvisorApproved() ? (student.isDeanApproved() ? finished : started) : pending) : notStarted);
        lblStuReg.setText(student.isStuRegistered() ? ((!student.isCourseAdvisorApproved()) || (!student.isHODApproved()) || (!student.isDeanApproved()) ? awaiting : yes) : no);
        lblAdmin.setText(student.isRegistrationAllowed() ? approved : unapproved);
        setLabelImage(student.getPassport(), lblPassport);
    }

    private void initFinancialReportPanel(Student student, Programme prog) {
        NumberFormat form = NumberFormat.getInstance(Locale.US);
        lblOriginalFees.setText(checkNull(form.format(prog.getProgrammeFee())));
        lblPaidFees.setText(checkNull(form.format(prog.getProgrammeFee() - student.getFeeBalance())));
        lblBalanceFees.setText(checkNull(form.format(student.getFeeBalance())));
    }

    private void initAcademicReportPanel(Student student, SessionDetails session, CarryOvers carry, RegisteredCourses reg) {
        lblGpa.setText(checkNull(student.getGpa()));
        lblMaxUnits.setText(checkNull(session.getMaximumUnits()));
        lblRegisteredUnits.setText(String.valueOf(getTotalRegisteredUnits(reg)));

        //for the reg table and carry over table
        if (carry != null) {
            ArrayList<Course> courses = carry.getCarriedCourses();
            if (courses.size() > 0) {
                initTable(tblCarried, courses);
            } else {
                initTableNoData(tblCarried);
            }
        } else {
            initTableNoData(tblCarried);
        }

        if (reg != null) {
            ArrayList<Course> regs = reg.getRegisteredCourses();
            if (regs.size() > 0) {
                initTable(tblRegistered, regs);
            } else {
                initTableNoData(tblRegistered);
            }
        } else {
            initTableNoData(tblRegistered);
        }
    }

    /**
     * initializes the table as a dummy table
     *
     * @param table
     */
    @Override
    protected void initTableDummy(JTable table) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setColumnIdentifiers(columnNames);
        table.setModel(model);
    }

    /**
     * Shows the full course information in a dialog
     *
     * @param evt Event generated from double clicking
     */
    private void showCourseInfo(MouseEvent evt, ArrayList<Course> courses) {
        JTable table = (JTable) evt.getSource();

        if (evt.getClickCount() == 2) {
            if (!dummy) {
                System.out.println("Not dummy");
                int row = table.getSelectedRow();

                if (row > -1) {
                    String courseCode = table.getModel().getValueAt(row, 0).toString(); //get coursecode
                    System.out.println("Course code: " + courseCode);

                    Course courseIn = courses.stream().
                            filter(course -> course.getCourseCode().equalsIgnoreCase(courseCode)).
                            findFirst().
                            orElse(null);

                    //create dialog
                    JDialog dialog = createDialog(panelCourseDetails, showCourseInfoSize);
                    initCourseInfo(courseIn); //set dialog details
                    dialog.setVisible(true);

                } else {
                    JDialog dialog = createDialog(panelCourseDetails, showCourseInfoSize);
                    //initCourseInfoDummy();
                    dialog.setVisible(true);
                }
            } else {
                table.clearSelection();
            }
        }
    }

    /**
     * Initialize course info dialog with course info
     *
     * @param course course object
     */
    private void initCourseInfo(Course course) {
        lblCourseCode.setText(course.getCourseCode());
        lblCourseLevel.setText(String.valueOf(course.getLevel()));
        lblCourseName.setText(course.getCourseName());
        lblCourseProgramme.setText(course.getProgramme().getProgrammeName());
        lblCourseStatus.setText(course.getCourseStatus());
        lblCreditUnits.setText(String.valueOf(course.getCreditUnits()));
    }

    /**
     * Adds a document listener to the text field for search purposes
     *
     * @param field
     */
    private void initDocumentListener(JTextField field) {
        field.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = field.getText().trim();
                searchText += text.charAt(text.length() - 1);
                searchStudent(tblStudents, studentList, searchType, searchText, columnNames);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                if (searchText.length() > 0) {
                    searchText = searchText.substring(0, searchText.length() - 1);
                    searchStudent(tblStudents, studentList, searchType, searchText, columnNames);
                } else {
                    initTableRecords(tblStudents, studentList, columnNames);
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbSearch;
    private javax.swing.JMenuItem itemApprove;
    private javax.swing.JMenuItem itemView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAdmin;
    private javax.swing.JLabel lblBalanceFees;
    private javax.swing.JLabel lblCAApproved;
    private javax.swing.JLabel lblCollege;
    private javax.swing.JLabel lblCourseCode;
    private javax.swing.JLabel lblCourseLevel;
    private javax.swing.JLabel lblCourseName;
    private javax.swing.JLabel lblCourseProgramme;
    private javax.swing.JLabel lblCourseStatus;
    private javax.swing.JLabel lblCreditUnits;
    private javax.swing.JLabel lblDeanApproved;
    private javax.swing.JLabel lblDept;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblGpa;
    private javax.swing.JLabel lblHODApproved;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblLevel;
    private javax.swing.JLabel lblMatricNo;
    private javax.swing.JLabel lblMaxUnits;
    private javax.swing.JLabel lblOriginalFees;
    private javax.swing.JLabel lblOriginalFees1;
    private javax.swing.JLabel lblOriginalFees2;
    private javax.swing.JLabel lblOriginalFees3;
    private javax.swing.JLabel lblPaidFees;
    private javax.swing.JLabel lblPassport;
    private javax.swing.JLabel lblProgramme;
    private javax.swing.JLabel lblRegStatus;
    private javax.swing.JLabel lblRegisteredUnits;
    private javax.swing.JLabel lblReportHeader;
    private javax.swing.JLabel lblReportHeader1;
    private javax.swing.JLabel lblReportHeader3;
    private javax.swing.JLabel lblReportHeader5;
    private javax.swing.JLabel lblReportHeader6;
    private javax.swing.JLabel lblStuReg;
    private javax.swing.JMenuItem menuChangePassword;
    private javax.swing.JScrollPane paneStudents;
    private javax.swing.JPanel panelCourseDetails;
    private javax.swing.JPanel panelFinance;
    private javax.swing.JPanel panelInfo;
    private javax.swing.JPanel panelMain;
    private javax.swing.JPanel panelReport;
    private javax.swing.JPanel panelStudent;
    private javax.swing.JPopupMenu popStudentOptions;
    private javax.swing.JSeparator separator;
    private javax.swing.JTabbedPane tabStudent;
    private javax.swing.JTable tblCarried;
    private javax.swing.JTable tblRegistered;
    private javax.swing.JTable tblStudents;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the dummy
     */
    public boolean isDummy() {
        return dummy;
    }

    /**
     * @param dummy the dummy to set
     */
    public void setDummy(boolean dummy) {
        this.dummy = dummy;
    }
}
