package frontend;

import backend.MainServer;
import frontend.createframes.*;
import frontend.deleteframes.*;
import frontend.viewframes.ViewCollegeFrame;
import frontend.viewframes.ViewCoursesFrame;
import frontend.viewframes.ViewDepartmentsFrame;
import frontend.viewframes.ViewProgrammeFrame;
import frontend.viewframes.ViewStaffFrame;
import frontend.viewframes.ViewStudentFrame;
import java.awt.SystemTray;
import java.awt.TrayIcon;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Fego
 */
public class ServerPanelFrame extends AbstractServerFrame {

    //Fields
    private MainServer server;
    private ScheduledExecutorService schedule = Executors.newSingleThreadScheduledExecutor(getThreadFactory());

    private final String[] columnNames = new String[]{"Client Host Name", "Client Host Address", "Client Role"};

    //Weird Fields
    SystemTray sysTray;
    TrayIcon icon;

    /**
     * Creates new form AbstractServerFrame
     */
    public ServerPanelFrame() {
        initComponents();
        System.out.println("In constructor");
        sysTray = SystemTray.getSystemTray();
    }

    public ServerPanelFrame(MainServer server) {
        this();
        initColumnNames(columnNames, tblConnections);
        ((DefaultTableModel) tblConnections.getModel()).setRowCount(0);
        this.server = server;
        this.server.startListener();
        System.out.println("Server listener started");
        initClientListThread();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelHome = new javax.swing.JPanel();
        paneConnections = new javax.swing.JScrollPane();
        tblConnections = new javax.swing.JTable();
        lblHeader = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuConfig = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        menuDeleteStudent = new javax.swing.JMenuItem();
        menuDeleteStaff = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        menuDeleteCollege = new javax.swing.JMenuItem();
        menuDeleteDept = new javax.swing.JMenuItem();
        menuDeleteProgramme = new javax.swing.JMenuItem();
        menuDeleteCourse = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menuCreateStudent = new javax.swing.JMenuItem();
        menuViewAllStudents = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        menuCreateStaff = new javax.swing.JMenuItem();
        menuViewAllStaffs = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        menuCreateCollege = new javax.swing.JMenuItem();
        menuViewAllColleges = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        menuCreateDept = new javax.swing.JMenuItem();
        menuViewAllDept = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        menuCreateProgramme = new javax.swing.JMenuItem();
        menuViewAllProg = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        menuCreateCourse = new javax.swing.JMenuItem();
        menuViewAllCourses = new javax.swing.JMenuItem();
        menuExit = new javax.swing.JMenu();
        menuCloseClients = new javax.swing.JMenuItem();
        menuBackground = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Server Panel");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        panelHome.setBackground(new java.awt.Color(84, 83, 83));

        tblConnections.setBackground(new java.awt.Color(84, 83, 83));
        tblConnections.setFont(new java.awt.Font("Segoe UI Emoji", 0, 14)); // NOI18N
        tblConnections.setForeground(new java.awt.Color(204, 204, 204));
        tblConnections.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblConnections.setToolTipText("Client Connections");
        tblConnections.setFillsViewportHeight(true);
        tblConnections.setRowHeight(20);
        tblConnections.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        setDefaultTableStyle(tblConnections);
        paneConnections.setViewportView(tblConnections);

        lblHeader.setFont(new java.awt.Font("Segoe UI Semilight", 1, 24)); // NOI18N
        lblHeader.setText("SERVER PANEL");

        javax.swing.GroupLayout panelHomeLayout = new javax.swing.GroupLayout(panelHome);
        panelHome.setLayout(panelHomeLayout);
        panelHomeLayout.setHorizontalGroup(
            panelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHeader)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(paneConnections, javax.swing.GroupLayout.DEFAULT_SIZE, 885, Short.MAX_VALUE)
        );
        panelHomeLayout.setVerticalGroup(
            panelHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paneConnections, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        menuFile.setText("File");

        menuConfig.setText("Configuration Settings");
        menuConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuConfigActionPerformed(evt);
            }
        });
        menuFile.add(menuConfig);

        jMenu1.setText("Delete");

        menuDeleteStudent.setText("Delete Student");
        menuDeleteStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDeleteStudentActionPerformed(evt);
            }
        });
        jMenu1.add(menuDeleteStudent);

        menuDeleteStaff.setText("Delete Staff");
        menuDeleteStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDeleteStaffActionPerformed(evt);
            }
        });
        jMenu1.add(menuDeleteStaff);
        jMenu1.add(jSeparator4);

        menuDeleteCollege.setText("Delete College");
        menuDeleteCollege.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDeleteCollegeActionPerformed(evt);
            }
        });
        jMenu1.add(menuDeleteCollege);

        menuDeleteDept.setText("Delete Department");
        menuDeleteDept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDeleteDeptActionPerformed(evt);
            }
        });
        jMenu1.add(menuDeleteDept);

        menuDeleteProgramme.setText("Delete Programme");
        menuDeleteProgramme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDeleteProgrammeActionPerformed(evt);
            }
        });
        jMenu1.add(menuDeleteProgramme);

        menuDeleteCourse.setText("Delete Course");
        menuDeleteCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDeleteCourseActionPerformed(evt);
            }
        });
        jMenu1.add(menuDeleteCourse);

        menuFile.add(jMenu1);

        jMenuBar1.add(menuFile);

        jMenu2.setText("Students");

        menuCreateStudent.setText("Create Student");
        menuCreateStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCreateStudentActionPerformed(evt);
            }
        });
        jMenu2.add(menuCreateStudent);

        menuViewAllStudents.setText("View All Students");
        menuViewAllStudents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuViewAllStudentsActionPerformed(evt);
            }
        });
        jMenu2.add(menuViewAllStudents);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Staffs");

        menuCreateStaff.setText("Create Staff");
        menuCreateStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCreateStaffActionPerformed(evt);
            }
        });
        jMenu3.add(menuCreateStaff);

        menuViewAllStaffs.setText("View All Staffs");
        menuViewAllStaffs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuViewAllStaffsActionPerformed(evt);
            }
        });
        jMenu3.add(menuViewAllStaffs);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Colleges");

        menuCreateCollege.setText("Create College");
        menuCreateCollege.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCreateCollegeActionPerformed(evt);
            }
        });
        jMenu4.add(menuCreateCollege);

        menuViewAllColleges.setText("View All Colleges");
        menuViewAllColleges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuViewAllCollegesActionPerformed(evt);
            }
        });
        jMenu4.add(menuViewAllColleges);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("Departments");

        menuCreateDept.setText("Create Department");
        menuCreateDept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCreateDeptActionPerformed(evt);
            }
        });
        jMenu5.add(menuCreateDept);

        menuViewAllDept.setText("View All Departments");
        menuViewAllDept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuViewAllDeptActionPerformed(evt);
            }
        });
        jMenu5.add(menuViewAllDept);

        jMenuBar1.add(jMenu5);

        jMenu6.setText("Programmes");

        menuCreateProgramme.setText("Create Programme");
        menuCreateProgramme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCreateProgrammeActionPerformed(evt);
            }
        });
        jMenu6.add(menuCreateProgramme);

        menuViewAllProg.setText("View All Programmes");
        menuViewAllProg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuViewAllProgActionPerformed(evt);
            }
        });
        jMenu6.add(menuViewAllProg);

        jMenuBar1.add(jMenu6);

        jMenu7.setText("Courses");

        menuCreateCourse.setText("Create Course");
        menuCreateCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCreateCourseActionPerformed(evt);
            }
        });
        jMenu7.add(menuCreateCourse);

        menuViewAllCourses.setText("View All Courses");
        menuViewAllCourses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuViewAllCoursesActionPerformed(evt);
            }
        });
        jMenu7.add(menuViewAllCourses);

        jMenuBar1.add(jMenu7);

        menuExit.setText("Exit");

        menuCloseClients.setText("Close all open client connections");
        menuExit.add(menuCloseClients);

        menuBackground.setText("Minimize Panel To Background");
        menuBackground.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBackgroundActionPerformed(evt);
            }
        });
        menuExit.add(menuBackground);

        jMenuBar1.add(menuExit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int option = JOptionPane.showConfirmDialog(this, "Do you want to exit server. \nNote: all clients will be disconnected", "Close All Connections", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {
            server.closeResources();
            this.closeResources();
            this.dispose();
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    private void menuCreateStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCreateStudentActionPerformed
        if (confirmAction("Create New Student?")) {
            if (recordExists(server, "Programmes", "ProgrammeCount")) {
                new CreateStudentFrame(this.server).setVisible(true);
            } else {
                displayErrorMessage("There must be at least one programme to create students. Please create that first",
                        "No Programme Exists");
            }
        }
    }//GEN-LAST:event_menuCreateStudentActionPerformed

    private void menuCreateStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCreateStaffActionPerformed
        if (confirmAction("Create New Staff?")) {
            if (recordExists(server, "Departments", "DeptCount") && recordExists(server, "Roles", "RoleCount")) {
                new CreateStaffFrame(this.server).setVisible(true);
            } else {
                displayErrorMessage("There must be at least one department or one role to create staffs. Please create one first",
                        "No Department/Role Exists");
            }
        }
    }//GEN-LAST:event_menuCreateStaffActionPerformed

    private void menuCreateCollegeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCreateCollegeActionPerformed
        new CreateCollegeFrame(server).setVisible(true);
    }//GEN-LAST:event_menuCreateCollegeActionPerformed

    private void menuCreateDeptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCreateDeptActionPerformed
        if (confirmAction("Create New Department")) {
            if (recordExists(server, "Colleges", "CollegeCount")) {
                new CreateDeptFrame(server).setVisible(true);
            } else {
                displayErrorMessage("There must be at least one college to create departments. Please create one first",
                        "No College Exists");
            }
        }
    }//GEN-LAST:event_menuCreateDeptActionPerformed

    private void menuCreateProgrammeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCreateProgrammeActionPerformed
        if (confirmAction("Create new programme")) {
            if (recordExists(server, "Departments", "DeptCount")) {
                new CreateProgrammeFrame(server).setVisible(true);
            } else {
                displayErrorMessage("There must be at least one department to create programmes. Please create one first",
                        "No Department Exists");
            }
        }
    }//GEN-LAST:event_menuCreateProgrammeActionPerformed

    private void menuCreateCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCreateCourseActionPerformed
        if (confirmAction("Create New Course")) {
            if (recordExists(server, "Programmes", "ProgrammeCount")) {
                new CreateCourseFrame(server).setVisible(true);
            } else {
                displayErrorMessage("There must be at least one programme to create courses. Please create one first",
                        "No Programme Exists");
            }
        }
    }//GEN-LAST:event_menuCreateCourseActionPerformed

    private void menuConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuConfigActionPerformed
        if (confirmAction("Are you sure you want to edit the set configurations?")) {
            System.out.println("Opening config panel for edit");
            new ServerConfigFrame(true).setVisible(true);
        }
    }//GEN-LAST:event_menuConfigActionPerformed

    private void menuDeleteStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDeleteStudentActionPerformed
        if (confirmAction("Do you want to delete a student from the records")) {
            new DeleteStudentFrame(server).setVisible(true);
        }
    }//GEN-LAST:event_menuDeleteStudentActionPerformed

    private void menuDeleteStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDeleteStaffActionPerformed
        if (confirmAction("Do you want to delete a staff from the records")) {
            new DeleteStaffFrame(server).setVisible(true);
        }
    }//GEN-LAST:event_menuDeleteStaffActionPerformed

    private void menuDeleteCollegeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDeleteCollegeActionPerformed
        if (confirmAction("Do you want to delete a college from the records")) {
            new DeleteCollegeFrame(server).setVisible(true);
        }
    }//GEN-LAST:event_menuDeleteCollegeActionPerformed

    private void menuDeleteDeptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDeleteDeptActionPerformed
        if (confirmAction("Do you want to delete a department from the records")) {
            new DeleteDepartmentFrame(server).setVisible(true);
        }
    }//GEN-LAST:event_menuDeleteDeptActionPerformed

    private void menuDeleteProgrammeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDeleteProgrammeActionPerformed
        if (confirmAction("Do you want to delete a programme from the records")) {
            new DeleteProgrammeFrame(server).setVisible(true);
        }
    }//GEN-LAST:event_menuDeleteProgrammeActionPerformed

    private void menuDeleteCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDeleteCourseActionPerformed
        if (confirmAction("Do you want to delete a course from the records")) {
            new DeleteCoursesFrame(server).setVisible(true);
        }
    }//GEN-LAST:event_menuDeleteCourseActionPerformed

    private void menuViewAllStudentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuViewAllStudentsActionPerformed
        new ViewStudentFrame(server).setVisible(true);
    }//GEN-LAST:event_menuViewAllStudentsActionPerformed

    private void menuViewAllStaffsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuViewAllStaffsActionPerformed
        new ViewStaffFrame(server).setVisible(true);
    }//GEN-LAST:event_menuViewAllStaffsActionPerformed

    private void menuViewAllDeptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuViewAllDeptActionPerformed
        new ViewDepartmentsFrame(server).setVisible(true);
    }//GEN-LAST:event_menuViewAllDeptActionPerformed

    private void menuViewAllProgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuViewAllProgActionPerformed
        new ViewProgrammeFrame(server).setVisible(true);
    }//GEN-LAST:event_menuViewAllProgActionPerformed

    private void menuViewAllCoursesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuViewAllCoursesActionPerformed
        new ViewCoursesFrame(server).setVisible(true);
    }//GEN-LAST:event_menuViewAllCoursesActionPerformed

    private void menuViewAllCollegesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuViewAllCollegesActionPerformed
        new ViewCollegeFrame(server).setVisible(true);
    }//GEN-LAST:event_menuViewAllCollegesActionPerformed

    private void menuBackgroundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBackgroundActionPerformed
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_menuBackgroundActionPerformed

    private void initClientListThread() {
        class RefreshList implements Runnable {

            @Override
            public void run() {
                if (server != null) {
                    DefaultTableModel model = new DefaultTableModel();
                    model.setColumnIdentifiers(columnNames);
                    server.getClientsList().stream().forEach(client -> model.addRow(new String[]{
                        client.getAddress().getHostName(),
                        client.getAddress().getHostAddress(),
                        client.role}));

                    setTableModel(tblConnections, model);
                }
            }
        }

        schedule.scheduleWithFixedDelay(new RefreshList(), 2, 3, TimeUnit.SECONDS);
    }

    private void initColumnNames(String[] columnNames, JTable table) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setColumnIdentifiers(columnNames);
    }

    private void closeResources() {
        schedule.shutdownNow();
    }

    @Override
    protected boolean validateAllFields() {
        return false;
    }

    private void setTableModel(JTable tbl, DefaultTableModel model) {
        tbl.setModel(model);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JMenuItem menuBackground;
    private javax.swing.JMenuItem menuCloseClients;
    private javax.swing.JMenuItem menuConfig;
    private javax.swing.JMenuItem menuCreateCollege;
    private javax.swing.JMenuItem menuCreateCourse;
    private javax.swing.JMenuItem menuCreateDept;
    private javax.swing.JMenuItem menuCreateProgramme;
    private javax.swing.JMenuItem menuCreateStaff;
    private javax.swing.JMenuItem menuCreateStudent;
    private javax.swing.JMenuItem menuDeleteCollege;
    private javax.swing.JMenuItem menuDeleteCourse;
    private javax.swing.JMenuItem menuDeleteDept;
    private javax.swing.JMenuItem menuDeleteProgramme;
    private javax.swing.JMenuItem menuDeleteStaff;
    private javax.swing.JMenuItem menuDeleteStudent;
    private javax.swing.JMenu menuExit;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenuItem menuViewAllColleges;
    private javax.swing.JMenuItem menuViewAllCourses;
    private javax.swing.JMenuItem menuViewAllDept;
    private javax.swing.JMenuItem menuViewAllProg;
    private javax.swing.JMenuItem menuViewAllStaffs;
    private javax.swing.JMenuItem menuViewAllStudents;
    private javax.swing.JScrollPane paneConnections;
    private javax.swing.JPanel panelHome;
    private javax.swing.JTable tblConnections;
    // End of variables declaration//GEN-END:variables
}
